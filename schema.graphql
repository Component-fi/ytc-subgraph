type Term @entity {
  id: ID!
  address: Bytes! #address
  expiration: BigInt!
  baseToken: Token!
  entryTransactions: [EntryTransaction!]! @derivedFrom(field: "term")
  dailyAccruedValues: [AccruedValue!]! @derivedFrom(field: "term")
}

type TermList @entity {
  id: ID!
  activeTerms: [Term!]!
  lastUpdate: BigInt!
}

type AccruedValue @entity {
  id: ID!
  term: Term!
  trancheSupply: BigInt!
  trancheDecimals: Int!
  ytSupply: BigInt!
  wrappedSupply: BigInt!
  wrappedDecimals: Int!
  timestamp: BigInt!
}

type EntryTransaction @entity {
  id: ID!
  numberOfCompounds: Int!
  term: Term!
  amountCollateralDeposited: BigInt!
  baseTokensSpent: BigInt!
  yieldTokensReceived: BigInt!
  gasPrice: BigInt!
  gasLimit: BigInt!
  from: User!
  timestamp: BigInt!
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  terms: [Term!]! @derivedFrom(field: "baseToken")
}

type User @entity {
  id: ID!
  Transactions: [EntryTransaction!]! @derivedFrom(field: "from")
}